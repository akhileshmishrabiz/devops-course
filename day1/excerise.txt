1. Create a VPC with IP range of 10.0.0.0/16
2. Create 2 subnets, 1 private and 1 public
3. Create 2 ec2 instances, 1 in private subnet (lets say private-ec2) and 1 in public subnet(lets say public-ec2). Use 1 key pair for both ec2.
Note: Private-ec2 will not have any public IP, and the public subnet will have a public IP. 
4. Try to connect to both of the ec2 instances. You should not be able to connect to either of them
5. Create an Internet gateway, and attach it to VPC
6. Create 2 routing tables, one private and one public. Associate the private/public subnet with private/public route tables.
7. Create routes for the public route table with an internet gateway, allowing you to connect to public ec2.
8. From your local laptop, connect to the public ec2
Locate the path of the private key and set the permission ->
chmod 400 "ssh-key.pem"     
# connect to ec2
ssh -i <private-key> user-name@public-ip # should log you into the newly created public-ec2 instance
# open a duplicate terminal in your local machine and copy the locally kept ssh key to public-ec2
scp -i "ssh-key.pem" "ssh-key.pem" ec2-user@<public-ip>:/home/ec2-user
# Now go back to the other terminal where you have logged into public-ec2 and go to path /home/ec2-user
cd /home/ec2-user
now you can connect to private-ec2 
ssh -i "ssh-key.pem" ec2-user@<private-ip>
now you run the below command to patch the host
sudo yum update will not allow you to patch as you need to get to the internet to download the patches.

9. Create a nat gateway on a public subnet. It will ask you to create elastic ip.
10. update the private route table route to allow a path to nat
11. Now go back to private-ec2  and run the patch command and it should work.


################################
Once you are done with the exercise, delete everything.
- delete both VM
- delete Nat 
- release elastic IP as you will be charged for it (You get charge for elastic IP when you are not using them)
- remove subnet, route tables, internet gateway, vpc

